/*
	1. Дан код:

	var a = 1, b = 1, c, d;
	c = ++a; alert(c);           // 2
	d = b++; alert(d);           // 1
	c = (2+ ++a); alert(c);      // 5
	d = (2+ b++); alert(d);      // 4
	alert(a);                    // 3
	alert(b);                    // 3

	Почему код даёт именно такие результаты?
*/


function num_1(){
	document.write(`
		<p>1. Дан код:</p>
		
		<p>var a = 1, b = 1, c, d;</p>
		<ol>
			<li>c = ++a; alert(c);           // 2</li>
			<li>d = b++; alert(d);           // 1</li>
			<li>c = (2+ ++a); alert(c);      // 5</li>
			<li>d = (2+ b++); alert(d);      // 4</li>
			<li>alert(a);                    // 3</li>
			<li>alert(b);                    // 3</li>
		</ol>

        	<p>Почему код даёт именно такие результаты?</p>
	`)

	document.write(`
		<hr>
		<ol>
			<li>Вводные данные: c = undefined; a = 1  Решение: c = (a = a + 1)  Ответ: c = 2; a = 2</li>
			<li>Вводные данные: d = undefined; b = 1  Решение: d = (b = 1); b = b + 1  Ответ: d = 1; b = 2</li>
                        <li>Вводные данные: c = 2; a = 2  Решение: c = (2 + (a = a + 1))  Ответ: c = 5; a = 3</li>
                        <li>Вводные данные: d = 1; b = 2  Решение: d = (2 + (b = 2)); b = b + 1  Ответ: d = 4; b = 3</li>
                        <li>Ответ: a = 3</li>
                        <li>Ответ: b = 3</li>
		</ol>

		<p>
			В постфиксной форме сначала происходит возвращение значения, а потом выполняется инкрементирование (b++).
			В префиксной форме инкрементирование производится сразу, а возврат — уже с обновленным значением (++a).
		</p>
		<hr>
		<br>
	`)
}


/*
	2. Чему будет равен x в примере ниже?

	var a = 2;
	var x = 1 + (a *= 2);
*/

function num_2(){
	document.write(`
		<p>2. Чему будет равен x в примере ниже?</p>
		<p>var a = 2;</p>
		<p>var x = 1 + (a *= 2);</p>

		<hr><p>Ответ: x = 5</p><hr><br>
	`);
}

/*
	3. Объявить две целочисленные переменные a и b и задать им произвольные начальные значения. Затем написать скрипт, который работает по следующему принципу:

	если a и b положительные, вывести их разность;
	если а и b отрицательные, вывести их произведение;
	если а и b разных знаков, вывести их сумму; ноль можно считать положительным числом.
*/


function num_3(){
	document.write(`
	<p>3. Объявить две целочисленные переменные a и b и задать им произвольные начальные значения. Затем написать скрипт, который работает по следующему принципу:</p>
	<ul>
		<li>если a и b положительные, вывести их разность;</li>
		<li>если а и b отрицательные, вывести их произведение;</li>
		<li>если а и b разных знаков, вывести их сумму;</li>
	</ul>
	<p>ноль можно считать положительным числом.</p>
	`)

	alert("3. Объявить две целочисленные переменные a и b и задать им произвольные начальные значения.")
	var a = +prompt("целочисленная переменная a"), b = +prompt("целочисленная переменняа b");

	function draw(operation, decision){
		document.write("<hr><p>Ответ: a = " + a + " b = " + b + " . Их " + operation + " = " + decision + "</p><hr><br>")
	}

	if (a >= 0 && b >= 0){
		draw("разность", (a - b));
	}
	else if (a < 0 && b < 0){
		draw("произведение", (a * b));
	}
	else {
		draw("сумму", (a + b));
	}
}


/*
	4. Присвоить переменной а значение в промежутке [0..15]. 
	С помощью оператора (switch/рекурсия) организовать вывод чисел от a до 15.
*/


function num_4(){
	 document.write(`
		<p>4. Присвоить переменной а значение в промежутке [0..15].</p>
        	<p>С помощью оператора (switch/рекурсия) организовать вывод чисел от a до 15.</p>
	`)


	var a = Math.floor(Math.random() * 15); 		//15 = (15 - 0) + 0
	var string_of_numbers = "";

	function draw(a){
		if (a < 15){
			string_of_numbers += (++a + ", ");
			draw(a);
		}
		else {
			document.write("<hr><p>Ответ: " + string_of_numbers + "</p><hr><br>");
		}
	}

	draw(a);
}


/*
	5. Реализовать основные 4 арифметические операции в виде функций с двумя параметрами. 
	Обязательно использовать оператор return.

        6. Реализовать функцию с тремя параметрами: 

        function mathOperation(arg1, arg2, operation), где arg1, arg2 – значения аргументов, operation – строка с названием операции. 
        В зависимости от переданного значения операции выполнить одну из арифметических операций (использовать функции из пункта 5) и 
                вернуть полученное значение (использовать switch).
*/


function num_5(){
	document.write(`
		<p>5. Реализовать основные 4 арифметические операции в виде функций с двумя параметрами.</p>
        	<p>Обязательно использовать оператор return.</p>

		<p>6. Реализовать функцию с тремя параметрами:</p>

		<ul>
        		<li>function mathOperation(arg1, arg2, operation),</li>
			<li>где arg1, arg2 – значения аргументов,</li>
			<li>operation – строка с названием операции.</li>
		</ul>

		<p>
        		В зависимости от переданного значения 
				операции выполнить одну из арифметических операций (использовать функции из пункта 5) и
	                	вернуть полученное значение (использовать switch).
		</p>
	`)

	alert("Задание №5, №6 мини калькулятор доступные операторы (+, -, *, /) ");
	var arg1 = prompt("первый операнд "), operation = prompt("оператор (+, -, *, /) "), arg2 = prompt("второй оперант ");

	function plus(arg1, arg2){
		return arg1 + arg2;
	}
	function minus(arg1, arg2){
		return arg1 - arg2;
	}
	function multiply(arg1, arg2){
		return arg1 * arg2;
	}
	function share(arg1, arg2){
		return arg1 / arg2;
	}

	function mathOperation(arg1, arg2, operation){
		switch (operation){
			case "+":
				return plus(arg1, arg2);
				break;
			case "-":
				return minus(arg1, arg2);
				break;
			case "*":
				return multiply(arg1, arg2);
				break;
			case "/":
				return share(arg1, arg2);
				break;
			default:
				return "Error invalid operation";
		}
	}

	document.write("<hr><p>Ответ: " + arg1, operation, arg2 + " = " + mathOperation(arg1, arg2, operation) + "</p><hr><br>")
}


/*
	7. *Сравнить null и 0. Попробуйте объяснить результат.
*/


function num_7(){
	document.write(`
		<p>7. *Сравнить null и 0. Попробуйте объяснить результат.</p>
	`)

	document.write(`
		<hr>
		<p>
			Ответ: null это отсутствие значения, 0 это число или значении false. 
			отсутствие значения != false && отсутствие значения != 0
		</p>
		<hr>
		<br>
	`)
}


/*
	8. *С помощью рекурсии организовать функцию возведения числа в степень. Формат: function power(val, pow), где val – заданное число, pow – степень.
*/


function num_8(){
	document.write(`
		<p>8. *С помощью рекурсии организовать функцию возведения числа в степень.</p>

		<p>Формат:</p>
		<ul>
			<li>function power(val, pow),</li>
			<li>где val – заданное число,</li>
			<li>pow – степень.</li>
		</ul>
	`)

	alert("8. *С помощью рекурсии организовать функцию возведения числа в степень.")
	var val = prompt("число "), pow = prompt("степень "), num = 1;
	var val_end = val, pow_end = pow;

	function power(val, pow){
		if (0 < pow){
			num *= val;
			power(val, --pow);
		}
		else {
			document.write("<hr><p>Ответ: " + val_end + "<sup>" + pow_end + "</sup> = " + num + "</p><hr>")
		}
	}

	power(val, pow);
}



num_1();
num_2();
num_3();
num_4();
num_5();
num_7();
num_8();






